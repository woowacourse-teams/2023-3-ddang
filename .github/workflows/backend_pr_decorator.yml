name: PR 코드 분석

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [ main, develop, develop-be ]

permissions: write-all

jobs:
  build:
    if: contains(github.event.pull_request.labels.*.name, 'backend')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: settings java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: cache gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: chmod gradle
        run: chmod +x backend/ddang/gradlew

      - name: run jacocoTestCoverage
        run: |
          cd backend/ddang
          ./gradlew jacocoTestCoverage 

      - name: set author slack id
        if: always()
        id: author-slack
        run: |
          GIT_ID=${{ github.event.pull_request.user.login }}
          
          if [ "$GIT_ID" == "apptie" ]; then
            AUTHOR_NAME="${{ secrets.apptie_slack_display_name }}"
            AUTHOR_ID="${{ secrets.apptie_slack_id }}"
          elif [ "$GIT_ID" == "swonny" ]; then
            AUTHOR_NAME="${{ secrets.swonny_slack_display_name }}"
            AUTHOR_ID="${{ secrets.swonny_slack_id }}"
          elif [ "$GIT_ID" == "JJ503" ]; then
            AUTHOR_NAME="${{ secrets.JJ503_slack_display_name }}"
            AUTHOR_ID="${{ secrets.JJ503_slack_id }}"
          elif [ "$GIT_ID" == "kwonyj1022" ]; then
            AUTHOR_NAME="${{ secrets.kwonyj1022_slack_display_name }}"
            AUTHOR_ID="${{ secrets.kwonyj1022_slack_id }}"
          fi
          
          echo "AUTHOR_NAME=${AUTHOR_NAME}" >> $GITHUB_OUTPUT
          echo "AUTHOR_ID=${AUTHOR_ID}" >> $GITHUB_OUTPUT

      - name: slack notification
        if: github.event_name == 'pull_request' && github.event.action != 'synchronize'
        run: |
          SLACK_MESSAGE='{"text":"PR 브랜치 분석","blocks":[{"type":"section","text":{"type":"mrkdwn","text":">*PR 브랜치 분석* \n>\n>*PR Author*\n>'
          SLACK_MESSAGE+="${{ steps.author-slack.outputs.AUTHOR_NAME }}"
          SLACK_MESSAGE+="\n>\n>*PR 링크*\n><"
          SLACK_MESSAGE+="${{ github.event.pull_request.html_url }} "
          SLACK_MESSAGE+="> \n>\n>*PR 제목*\n>"
          SLACK_MESSAGE+="${{ github.event.pull_request.title }}"
          SLACK_MESSAGE+="\n>\n>분석 결과\n>"
          SLACK_MESSAGE+=":white_check_mark:"

          curl -X POST ${{ secrets.SLACK_WEBHOOK }} -d "${SLACK_MESSAGE}" 

      - name: slack failed notification
        if: failure()
        run: |
          SLACK_MESSAGE='{"text":"PR 브랜치 분석","blocks":[{"type":"section","text":{"type":"mrkdwn","text":">*PR 브랜치 분석* \n>\n>*PR Author*\n>'
          SLACK_MESSAGE+="<@"
          SLACK_MESSAGE+="${{ steps.author-slack.outputs.AUTHOR_ID }}"
          SLACK_MESSAGE+=">"
          SLACK_MESSAGE+="\n>\n>*PR 링크*\n><"
          SLACK_MESSAGE+="${{ github.event.pull_request.html_url }} "
          SLACK_MESSAGE+="> \n>\n>*PR 제목*\n>"
          SLACK_MESSAGE+="${{ github.event.pull_request.title }}"
          SLACK_MESSAGE+="\n>\n>분석 결과\n>"
          SLACK_MESSAGE+=":x:"
          SLACK_MESSAGE+='"}}]}'
          
          curl -X POST ${{ secrets.SLACK_WEBHOOK }} -d "${SLACK_MESSAGE}"

      - name: slack cancelled notification
        if: cancelled()
        run: |
          SLACK_MESSAGE='{"text":"PR 브랜치 분석","blocks":[{"type":"section","text":{"type":"mrkdwn","text":">*PR 브랜치 분석* \n>\n>*PR Author*\n>'
          SLACK_MESSAGE+="<@"
          SLACK_MESSAGE+="${{ steps.author-slack.outputs.AUTHOR_ID }}"
          SLACK_MESSAGE+=">"
          SLACK_MESSAGE+="\n>\n>*PR 링크*\n><"
          SLACK_MESSAGE+="${{ github.event.pull_request.html_url }} "
          SLACK_MESSAGE+="> \n>\n>*PR 제목*\n>"
          SLACK_MESSAGE+="${{ github.event.pull_request.title }}"
          SLACK_MESSAGE+="\n>\n>분석 결과\n>"
          SLACK_MESSAGE+=":black_square_for_stop:"
          SLACK_MESSAGE+='"}}]}'
          
          curl -X POST ${{ secrets.SLACK_WEBHOOK }} -d "${SLACK_MESSAGE}"
