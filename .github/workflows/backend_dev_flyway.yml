name: dev flyway 검증

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [develop-be]

permissions: write-all

jobs:
  build:
    if: contains(github.event.pull_request.labels.*.name, 'backend')
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: testdb
          MYSQL_USER: test
          MYSQL_PASSWORD: password
        ports:
          - 7777:3306
    steps:
      - uses: actions/checkout@v3
      - name: Check MySQL Connection
        run: |
          mysql -h localhost -P 7777 -u test -ppassword -e "SELECT 1"
      - name: settings java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: cache gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: chmod gradle
        run: chmod +x backend/ddang/gradlew

      - name: Create flyway.conf
        run: |
          touch flyway.conf
          echo "flyway.driver=com.mysql.cj.jdbc.Driver" >> flyway.conf
          echo "flyway.url=jdbc:mysql://localhost:7777/testdb" >> flyway.conf
          echo "flyway.user=test" >> flyway.conf
          echo "flyway.password=password" >> flyway.conf
          echo "flyway.encoding=UTF-8" >> flyway.conf
          echo "flyway.locations=filesystem:src/main/resources/db/migration" >> flyway.conf
          echo "flyway.validateOnMigrate=true" >> flyway.conf
        working-directory: ./backend/ddang

      - name: flywayValidate
        run: |
          ./gradlew -Dflyway.configFiles=flyway.conf flywayMigrate --stacktrace
          ./gradlew -Dflyway.configFiles=flyway.conf flywayValidate --stacktrace
        working-directory: ./backend/ddang
