name: dev flyway 검증

on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [develop-be]

permissions: write-all
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'

    - name: Set up Docker Compose
      run: docker-compose -f .github/docker-compose.yml up -d

    - name: Build and test
      run: |
        ./mvnw clean install
        flyway migrate

    - name: Run JUnit tests
      run: ./mvnw test

    - name: Shut down Docker Compose
      run: docker-compose -f .github/docker-compose.yml down
      
# jobs:
#   build:
#     if: contains(github.event.pull_request.labels.*.name, 'backend')
#     runs-on: ubuntu-latest
  
#     steps:
#       - uses: actions/checkout@v3
          
#       - name: settings java
#         uses: actions/setup-java@v3
#         with:
#           java-version: '17'
#           distribution: 'temurin'
          
#       - name: cache gradle
#         uses: actions/cache@v2
#         with:
#           path: |
#             ~/.gradle/caches
#             ~/.gradle/wrapper
#           key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#           restore-keys: |
#             ${{ runner.os }}-gradle-
            
#       - name: chmod gradle
#         run: chmod +x backend/ddang/gradlew

#       - name: Set up Docker Compose
#         run: docker-compose -f .github/workflows/docker-compose.yml up -d

#       - name: Create flyway.conf
#         run: |
#           touch flyway.conf
#           echo "flyway.driver=com.mysql.cj.jdbc.Driver" >> flyway.conf
#           echo "flyway.url=jdbc:mysql://127.0.0.1:7777/testdb" >> flyway.conf
#           echo "flyway.user=test" >> flyway.conf
#           echo "flyway.password=password" >> flyway.conf
#           echo "flyway.encoding=UTF-8" >> flyway.conf
#           echo "flyway.locations=filesystem:src/main/resources/db/migration" >> flyway.conf
#           echo "flyway.validateOnMigrate=true" >> flyway.conf
#         working-directory: ./backend/ddang

#       - name: flywayValidate
#         run: |
#           ./gradlew -Dflyway.configFiles=flyway.conf flywayMigrate --stacktrace
#         working-directory: ./backend/ddang

#       - name: Stop MySQL
#         run: docker stop mysql
      
