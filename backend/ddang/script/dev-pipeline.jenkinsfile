pipeline {
    agent any

    stages {
        stage('build start notification to slack') {
            steps {
                slackSend (
                    channel: '#빌드-결과',
                    color: '#FFFF00',
                    message: "빌드 시작!: pipeline : ${env.JOB_NAME}#${env.BUILD_NUMBER} (http://${env.EC2_PUBLIC_IP}/jenkins)"
                )
            }
        }

        stage('github clone') {
            steps {
                checkout scmGit(
                    branches: [[name: '*/develop-be']],
                    extensions: [submodule(parentCredentials: true, reference: '', trackingSubmodules: true)],
                    userRemoteConfigs: [[credentialsId: 'github-token', url: 'https://github.com/woowacourse-teams/2023-3-ddang']])
            }
        }

        stage('build'){
            steps{
                sh'''
                    cd backend/ddang
                    ./gradlew clean bootJar
                '''
            }
        }

        stage('publish') {
            steps {
               sshagent(credentials: ['ddang-dev-ec2']) {
                   sh "scp backend/ddang/build/libs/ddang-0.0.1-SNAPSHOT.jar ubuntu@${env.DEV_EC2_PRIVATE_IP}:${env.EC2_DIRECTORY}"
                   sh "scp backend/ddang/3-ddang-submodule/application-dev.yml ubuntu@${env.DEV_EC2_PRIVATE_IP}:${env.EC2_DIRECTORY}"
                   sh "scp backend/ddang/script/dev-deploy-script.sh ubuntu@${env.DEV_EC2_PRIVATE_IP}:${env.EC2_DIRECTORY}"
                   sh "ssh ubuntu@${env.DEV_EC2_PRIVATE_IP} 'sh ${env.EC2_DIRECTORY}/dev-deploy-script.sh' "
               }
           }
        }
    }

    post {
        always {
            cleanWs(cleanWhenNotBuilt: true,
                    deleteDirs: true,
                    disableDeferredWipeout: true,
                    notFailBuild: true)
        }
        success {
            slackSend (
                channel: '#빌드-결과',
                color: '#00FF00',
                message: """
                    빌드 성공!: pipeline : ${env.JOB_NAME}#${env.BUILD_NUMBER} (http://${env.INFRA_EC2_PUBLIC_IP}/jenkins)
                """
            )
        }
        failure {
            slackSend (
                channel: '#빌드-결과',
                color: '#FF0000',
                message: "<!channel>\n빌드 실패...: pipeline : ${env.JOB_NAME}#${env.BUILD_NUMBER} (http://${env.EC2_PUBLIC_IP}/jenkins)"
            )
        }
    }
}
